{
  "userLocalCommitId" : 1,
  "fileDetails" : [ {
    "fileId" : 2,
    "fileName" : "fpa-bi/story/src/story/StoryAdapter.ts",
    "commitHistory" : [ {
      "commitId" : "442b8bd2cb0e2a5de11dc4cdf1ecbb0139b29839",
      "commitAuthor" : {
        "name" : "Cynthia Lim",
        "emailAddress" : "cy.lim@sap.com",
        "when" : 1529000216000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1529000216,
      "shortMessage" : "[smurf] Rename Component -> StoreEntityInterface/StoreEntityPlugin",
      "fullMessage" : "[smurf] Rename Component -> StoreEntityInterface/StoreEntityPlugin\n\nSUMMARY:\nThis is the second of two changes to rename certain concepts that have to do\nwith the unified store. The intent is to choose specific and more descriptive\nterms instead of generic, overloaded ones like \"object type\" and \"component\",\nand thus make it easier/less confusing to communicate about these topics.\n\nHere we rename Component/StateComponent to one of two things depending on\nwhat it actually refers to,\n- StoreEntityInterface for the consumer-facing API\n- StoreEntityPlugin for the store-facing plugin (including interface,\n  reducer and/or adapter, action handlers, listeners, etc.)\n\nWe are not renaming the following:\n- React Components (it's the proper term there)\n- Other references to things that aren't store entity interfaces or plugins,\n  such as cache keys, or objects representing exports for an entire code area\n  e.g. IDynamicTableCaches.tableComponent\n  e.g. const TableComponent = require(\"table\");\n  (Go ahead and rename these separately if you find a more appropriate term)\n\nNote: \"Store entity\" refers to the entire thing - all the logic to deal with\na particular type of object in the store.  But we should almost never refer\nto store entities within the code, only to store entity interfaces or plugins.\n\nTO DO SEPARATELY:\n- Fix consumers to use AppInterface not AppStoreEntityPlugin.interface.\n  Store entity plugins should only be used on unified store load.  I fixed\n  most other places where consumers were using plugin.interface instead of\n  the interface itself, but for App there was too much to deal with here.\n\n- (unified-store internal) Rename type parameter CI -> RT (= return type)\n\nMANUAL TESTING:\n- both unified store samples\n- sanity/smoke check for story create/save/view with viz and table\n- sanity/smoke check for app create/save/run with Redux widgets and script\n\n---------------------------------------\nGORY DETAILS:\n\nUpdate unified-store README and docs.\n\nExport virtual interfaces and interface stubs from data-query-model so they\ncan be used independently of the store entity.\n\nTweak some tests to call exported interface instead of plugin.interface:\n- Test.ts, UnifiedStoreSpec (unified-store)\n- CheckboxGroupActionSpec, DropdownBoxActionSpec, RadioButtonGroupSpec\n  (appBuilding)\n\nRename TS files:\n- Component -> StoreEntityPlugin\n- *Component (in unified-store) -> *StoreEntityInterface\n- ImageWidgetStateComponent -> ImageWidgetStoreEntityPlugin\n- FilterLineStateComponent -> FilterLineStoreEntityPlugin\n- AppComponent -> AppStoreEntityPlugin\n- AppComponentSpec -> AppStoreEntityInterfaceSpec\n- *Component (in viz, table, data-query-model) -> *StoreEntityInterface\n- createComponentInterfacesSpec -> createStoreEntityPluginsSpec\n- ComponentType (in ORC sample) -> StoreEntityType\n\nRename things in code:\n- create*ComponentInterface(s) -> create*StoreEntityPlugins\n- IComponent -> IStoreEntityPlugin\n- StoreComponentInterfaces -> StoreEntityInterfaces\n- *ComponentInterfaces -> *StoreEntityInterfaces\n- getStateComponentInterface (in AbstractUnifiedStoreWidget) -> getStoreEntityInterface\n- TextWidgetStateComponent -> TextWidgetStoreEntityPlugin\n- *Component (in viz, table) -> *StoreEntityInterface\n- *Component (abstract store entities in data-query-model) -> *StoreEntity\n- *Component (plugins in app-building/src/components) -> *StoreEntityPlugin\n- ComponentCacheKeys (VizStoreEntityInterface) -> VizCacheKeys\n- *ComponentInterface (variables) -> *StoreEntityInterface\n- *ComponentActions (in table, text) -> Actions\n- getComponentStateType (in unified-store) -> getStoreEntityStateType\n- FakeComponent.interface -> FakeInterface\n- MixComponent.interface -> MixInterface\n- component (variables in unified-store) -> plugin\n- *Component (functions in unified-store) -> StoreEntityType\n\nChange-Id: I9427491ee43f092171cca40b672b0417324b17c9\nworkstream: app_building\njira: FPA46-443\n",
      "jiraId" : null
    }, {
      "commitId" : "979a3cfa2727e9d03b1f0d0758db9be20efea395",
      "commitAuthor" : {
        "name" : "Johnson Wong",
        "emailAddress" : "johnson.wong@sap.com",
        "when" : 1528256810000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1528256810,
      "shortMessage" : "[smurf] Rename objectType -> storeEntityType",
      "fullMessage" : "[smurf] Rename objectType -> storeEntityType\n\nThis is part 1 of N changes to rename certain concepts that have to do with\nthe unified store.  The intent is to choose specific, meaningful terms\ninstead of generic ones like \"object type\" and \"component\", and thus make it\neasier/less confusing to communicate about these topics.\n\nRename objectType -> storeEntityType when referring to the type ID of an\ninstance in the unified store (vs. some query object, FF metadata object,\ncontentlib artifact, ...)\n\nSimilarly,\n- getUnifiedStoreObjectType -> getStoreEntityType\n- ComponentObjectType -> StoreEntityType\n- StoreObjectType -> StoreEntityType\n\nMANUAL TESTING:\n- unified store samples\n- (informal sanity/smoke) app building DT/RT including button, basic script\n- (informal sanity/smoke) story - viz and table\n\nChange-Id: Ie99411c4346242b34026c1b2b6d69c64508a916a\nworkstream: app_building\njira: FPA46-443\n",
      "jiraId" : null
    }, {
      "commitId" : "c1960d193f83d9b8c889764e12169e9a3b07d802",
      "commitAuthor" : {
        "name" : "Peter Tippett",
        "emailAddress" : "peter.tippett@sap.com",
        "when" : 1527534573000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1527534573,
      "shortMessage" : "[SMURF] Enforce InstanceId structure and make objectType optional",
      "fullMessage" : "[SMURF] Enforce InstanceId structure and make objectType optional\n\nThis checkin ensures that any instances *registered* with or\n*createInstanced*within the unified store have instanceIds that\ncontain the object type as the key in the last entryof the array.\n\nWith this change, suddenly selectors can be significantly simplified\n(removing theneed for a distinction between Typed selectors and non-Typed\nselectors).\nWith that change, we can also make it so that in the non-parameterized case\n you can just feed an InstanceId (instead of wrapping it up in IParamSetId).\nThis can really streamline things.\n\nNOTE: there are some breaking changes\n1. Removal of some types that were previously exported\n2. Removal of createInstance and deleteInstance\n3. Make getInstance in the AbstractLogicalStoreAdapter take an InstanceId\n   instead of a string.\n\nAlong with this change:\n* We now enforce that InstanceId be created with a proper structure (passing\n  in an empty array or one containing objects with more or less than one\n  key/value pair will fail)\n* Improved the way action creators are created.  improved the createInstance\n  and deleteInstance mechanisms and added a getActionCreatorMaker mechanism\n  to reduce boilerplate for action creators\n* Removed the (unused) dependants system state\n* Changed some standard interfaces and other code (particularly\n  ParentComponent, Listeners, Missing, chainAccumulate) to just use InstanceId\n  instead of IParamSetTypeAndId\n* Removed soft constraints for selectors since they usually just make problems\n  happen further from the source\n* Fixes the typing of ReducerUtils and ObjectUtils so that they enforce typing\n  for simple cases instead of reverting to any\n\nPS2 - Fix TSLint issues\nPS3 - Fix a bunch of build build breaks due to the breaking changes mentioned\n      above\nPS4 - More test fixes (still seeing a few weird failures that don't seem related\n      to my change), plus split out the change to getNewState since it requires\n      specific discussions\nPS6 - More rebasing and fixes\nPS7 - revert a build fix for commenting tests that seems to now cause a break in\n      the voter\nPS8 - some fixes to ensure that the object types match the instance Ids\nPS9 - additional fixes to adapter tests, plus updates to the selectors.md\nPS10 - Just keep fixing, just keep fixing (Text Adapter tests this time)\nPS11 - Updates based on Cynthia's review comments\n\nworkstream: workstream_app_building\ncategory: refactoring\n\nChange-Id: I222aad02697eabc5ad97c966288d8079f44dc7f2\njira: FPA46-421\n",
      "jiraId" : null
    }, {
      "commitId" : "413d0c8956865d7a9a203e7f442656af57b52077",
      "commitAuthor" : {
        "name" : "Erik Schmidt",
        "emailAddress" : "erik.schmidt@sap.com",
        "when" : 1526333648000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1526333648,
      "shortMessage" : "[StoryAdapter] hook up variable member value help to interface",
      "fullMessage" : "[StoryAdapter] hook up variable member value help to interface\n\nExpose the common variable value helper code to the story interface.\n\njira: FPA46-240\nChange-Id: I14cfd11e6dacbae082844c57f257afa3e84ef642\n",
      "jiraId" : null
    }, {
      "commitId" : "2afac851825bd0455e8933cbb473665615599c8c",
      "commitAuthor" : {
        "name" : "Vincent Choy",
        "emailAddress" : "vincent.choy@sap.com",
        "when" : 1526078415000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1526078415,
      "shortMessage" : "Open story variable prompt dialog for app building",
      "fullMessage" : "Open story variable prompt dialog for app building\n\nAdd action to open variable prompt dialog from story.\nAdd selector to retrieve whether story variable prompt dialog is open.\nHide the story editable checkbox if in app building view.\nSimilar to table variable prompt dialog.\nUpdate the max dependency size. Seems like another change added\nsome more dependencies causing this build to fail.\nInvestigating the cause but Johnson says it is ok to bump this up for now.\nAdd unit test for launching prompt dialog.\nAdd listener instead of a ui event that triggers one time because it is possible\nfor multiple dialogs to be opened in a row and listening to the prompt dialog\nclose event can be triggered for more than one dialog when the expected\nbehavior is to only fire one close event.\n\nChange-Id: I3504149533500934713149283115cc5ad5103c8f\nworkstream: workstream_app_building\njira: FPA46-42\ndeflake: test.sap.fpa.ui.story.storyAdapter.StoryAdapterIntegrationSpec::Open Story Variable Prompt Dialog\n",
      "jiraId" : null
    }, {
      "commitId" : "91a124bc6303580236df17ccb45befa6fdf73659",
      "commitAuthor" : {
        "name" : "Johnson Wong",
        "emailAddress" : "johnson.wong@sap.com",
        "when" : 1525922052000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1525922052,
      "shortMessage" : "Split out image and text-adapter out from fpa-bi/story folder",
      "fullMessage" : "Split out image and text-adapter out from fpa-bi/story folder\n\nWhat\n-----------------------------------------------------------------------\nMove files according to the suggestied code folder structure at\nhttps://wiki.wdf.sap.corp/wiki/display/OrcaDev/\nClient+Re-Arch+Infrastructure\n\nChanges\n-----------------------------------------------------------------------\n1. Split image and text-adapter out from fpa-bi/story and create their\nown folder based on the above standard. Change \"text-adapter\" as \"text\"\nand create a \"adapter\" under its own src folder.\n2. Previously, image, text-adapter and story are combined together with\none index.ts, this CL split it to their own folder and each one has\ntheir own src/index.ts. For all existing reference of image and text, I\nhave changed them to the new module.\n3. Add image and text to tsconfig.json and webpack.config.js to make it\nrecgonized by TS and Webpack\n4. Create types, utils and selectors and move files in.\n\nChange-Id: Ia97146456a05f621d68d2273a14c0aab40404cd9\nWorkstream: workstream_app_building\nJIRA: FPA46-236\nAction: fix\n",
      "jiraId" : null
    }, {
      "commitId" : "71d556b7e4d721915e3c5606906dc47a69ecd8f7",
      "commitAuthor" : {
        "name" : "Aidan Chan-Henry",
        "emailAddress" : "aidan.chan-henry@sap.com",
        "when" : 1525880478000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1525880478,
      "shortMessage" : "Revert \"Open story variable prompt dialog for app building\"",
      "fullMessage" : "Revert \"Open story variable prompt dialog for app building\"\n\nThis reverts commit 59d3f04bac30945e710194dd4e437aeb8fb87ae8.\njira: FPA46-42\n\nChange-Id: I250804ec52bfe94d4d5efbe8602d61c9cdde71e8\n",
      "jiraId" : null
    }, {
      "commitId" : "59d3f04bac30945e710194dd4e437aeb8fb87ae8",
      "commitAuthor" : {
        "name" : "Vincent Choy",
        "emailAddress" : "vincent.choy@sap.com",
        "when" : 1525707768000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1525707768,
      "shortMessage" : "Open story variable prompt dialog for app building",
      "fullMessage" : "Open story variable prompt dialog for app building\n\nAdd action to open variable prompt dialog from story.\nAdd selector to retrieve whether story variable prompt dialog is open.\nHide the story editable checkbox if in app building view.\nSimilar to table variable prompt dialog.\nUpdate the max dependency size. Seems like another change added\nsome more dependencies causing this build to fail.\nInvestigating the cause but Johnson says it is ok to bump this up for now.\n\nChange-Id: Icb01ed5aafb7c30b35bd25092fe5758320986dc4\nworkstream: workstream_app_building\njira: FPA46-42\n",
      "jiraId" : null
    }, {
      "commitId" : "23d85be3d7c17baa2a409b0c5d3ab8c979fa5ffb",
      "commitAuthor" : {
        "name" : "Vincent Choy",
        "emailAddress" : "vincent.choy@sap.com",
        "when" : 1524787142000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1524787142,
      "shortMessage" : "Add Story Variables for App Building",
      "fullMessage" : "Add Story Variables for App Building\n\nAdd ability for app builder to set story level variables.\nIt uses the same IModelVariables interface used in table and viz variables.\nOne difference is that getVariables will return all story model variables\nif no modelId is specified.\nsetVariables only allows one model's variables to be set at a time.\nThis is consistent with the current story workflow ui which only allows the\ndialog to set one model's variables.\n\nChange-Id: Ib44df5e33402f31c34ae8a247350ab8192cac44c\nworkstream: workstream_app_building\njira: FPA46-42\n",
      "jiraId" : null
    }, {
      "commitId" : "20ae0d503cf800b56d4dee90c006f5893ad96487",
      "commitAuthor" : {
        "name" : "Cynthia Lim",
        "emailAddress" : "cy.lim@sap.com",
        "when" : 1522872078000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1522872078,
      "shortMessage" : "[Story adapter] Action to show/hide \"dialogs\" in App Building RT",
      "fullMessage" : "[Story adapter] Action to show/hide \"dialogs\" in App Building RT\n\nSupport the runtime requirements of App Building.  The app writer can design\n\"dialogs\" (pages) at design time, and trigger them to be shown/hidden at\nruntime via scripts.  The new action is\n\n  setCanvasDialogVisible(dialogId: string, visible: boolean)\n\nIt assumes the story model has already been transformed by squashPages (see\nhttps://git.wdf.sap.corp/3243840).  It is a no-op under any of the following\nconditions:\n- story not in view mode\n- current page is not a canvas page\n- section with the given \"dialogId\" does not exist on current page\n- section is already visible/invisible as requested\n\nLIMITATION: quick actions don't appear for widgets in a dialog.\n\nHOW:\n- To show a \"dialog\", create an actual sap.m.Dialog and move the section from\n  the page to the Dialog (with some tricks to avoid unnecessary re-rendering,\n  similar to how canvas pages support widget group/ungroup)\n- To hide, close the Dialog and move the section back to the page\n\nMANUAL TESTING:\n- Visual appearance and modal behaviour of dialogs\n  ...when one is visible/multiple are visible\n  ...with colourful or transparent background\n- Single render when showing or hiding a dialog\n- State of widgets inside dialogs (e.g. viz/table interaction state) should\n  be preserved after hiding and showing the dialog again\n\nAUTOMATION: Dispatch action (using original story's page IDs) and check\nsection visibility.\n\nChange-Id: I71a5bfae0bcecde1cfc67a82ae0b40a48e0f4059\nworkstream: app_building\njira: FPA46-169\n",
      "jiraId" : null
    }, {
      "commitId" : "46275470bedd6a31a082fc0b823256917900483e",
      "commitAuthor" : {
        "name" : "Cynthia Lim",
        "emailAddress" : "cy.lim@sap.com",
        "when" : 1522083885000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1522083885,
      "shortMessage" : "[Story adapter] Add page management APIs, change getWidgets to ignore order",
      "fullMessage" : "[Story adapter] Add page management APIs, change getWidgets to ignore order\n\nAdded the following APIs to support app building design time\n- getPages(): string[]\n- addCanvasPage(fixedSize: boolean)\n- removePage(pageId: string)\n- getActivePage(): string\n- setActivePage(pageId: string)\n- getPageWidgets(pageId: string, ordered: boolean): IWidgetTypeAndId[]\n\nTest automation updates\n- Add tests/checks for new APIs, including checks for empty page cases\n- Reorganize tests within the integration spec to accommodate new workflows\n- Add checks for invalid inputs:\n  Actions should be no-ops\n  Parameterized selectors return a fallback value\n\nUSAGE NOTES\n- For addCanvasPage, the action creator generates the new pageId (a GUID).\n  The caller is expected to use that pageId to refer to the new page.\n\n- *The existing getWidgets has been changed to be independent of z-order!*\n  Use getPageWidgets.feed({pageId: currentPageId, ordered: true}) instead.\n\n- An existing bug FPA46-203 means getSelectedWidgets subscribers will be\n  incorrectly notified upon addCanvasPage/removePage.  Will fix separately.\n\nTODO: Update the API wiki https://wiki.wdf.sap.corp/wiki/x/R2njcw\n\nChange-Id: If920dea911fb1a414ea4191e30cf62f36ea5b3e6\njira: FPA46-168\n",
      "jiraId" : null
    }, {
      "commitId" : "3e1ce998d52f88a2a36e3ba722796eb9fd98a9f7",
      "commitAuthor" : {
        "name" : "Lauren Fung",
        "emailAddress" : "lauren.fung@sap.com",
        "when" : 1520985235000,
        "timeZone" : "GMT+01:00",
        "timeZoneOffset" : 60
      },
      "commitTime" : 1520985235,
      "shortMessage" : "[smurf] updating Abstract Adapter class interface to handle refreshes",
      "fullMessage" : "[smurf] updating Abstract Adapter class interface to handle refreshes\n\nIn the transaction case, we need to keep track of which instances\nwere involved, and then send the query and update the UI after\nthe transaction is committed and complete.\n\nTo do this, we keep an array of instance Ids and then refresh\neach instance after the transaction/batched action is complete.\nTo make this mechanism more general (to be used in the\nnon-transaction case too), we need the Abstract Adapter class\nto handle the dispatch and refresh the components after the action\npromises have resolved.\n\nIt is up to the adapter action handlers to add or not add to the\nrefresh list array. (Some actions are async and don't update\nthe UI)\n\nChange-Id: Iece19f0059acdd5d4c665d561db5cfd0753b174b\nJira: FPA46-178\nworkstream: workstream_app_building\n",
      "jiraId" : null
    }, {
      "commitId" : "d5106bac61a5706f301b925101dba897688fbbf7",
      "commitAuthor" : {
        "name" : "Cynthia Lim",
        "emailAddress" : "cy.lim@sap.com",
        "when" : 1517423178000,
        "timeZone" : "GMT+01:00",
        "timeZoneOffset" : 60
      },
      "commitTime" : 1517423178,
      "shortMessage" : "[Story adapter] Action to delete selected widgets",
      "fullMessage" : "[Story adapter] Action to delete selected widgets\n\nBasically do the same thing as the quick action buttons and the Delete keyup\nhandler (the quick actions also tell the layout what to select, which is not\nneeded for us).\n1) tell the relevant widget(s) that they're being deleted\n2) tell layout to delete selection\n\nLike the keyup handler, it's a no-op if nothing is selected.\n\nUnlike setSelectedItem, the delete workflow already supports synchronous\nnotification!  Oh the irony.\n\nMANUAL TESTING:\n- Create/open a story with different types of widgets (grouped/ungrouped).\n  For each, select it and call the new UI5 story API using devtools console.\n  Note that deleting GDIC (geo distance slider) should remove the map filter.\n\nChange-Id: I5be538a0c80f4fb89c268d2fc056a3c896b6746e\nworkstream: app_building\njira: FPA46-80\n",
      "jiraId" : null
    }, {
      "commitId" : "87035bd1decce17080d5939007dd2bfde0f53ca0",
      "commitAuthor" : {
        "name" : "Johnson Wong",
        "emailAddress" : "johnson.wong@sap.com",
        "when" : 1516397676000,
        "timeZone" : "GMT+01:00",
        "timeZoneOffset" : 60
      },
      "commitTime" : 1516397676,
      "shortMessage" : "Move source code under src subdir in new component areas",
      "fullMessage" : "Move source code under src subdir in new component areas\n\n- Establishing additional layer of folders under component roots\nto allow for separating files such as source code, docs, buildcfg etc\n- Also sets things up for (long-term) vision of separate builds\n\nChange-Id: I2a8db1569cb13b666e2a555c096c448df81569de\nworkstream: workstream_app_building\njira: FPA22-7200 FPA46-51\n",
      "jiraId" : null
    } ]
  }, {
    "fileId" : 3,
    "fileName" : "fpa-bi/story/src/story/types/StoryTypes.ts",
    "commitHistory" : [ {
      "commitId" : "442b8bd2cb0e2a5de11dc4cdf1ecbb0139b29839",
      "commitAuthor" : {
        "name" : "Cynthia Lim",
        "emailAddress" : "cy.lim@sap.com",
        "when" : 1529000216000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1529000216,
      "shortMessage" : "[smurf] Rename Component -> StoreEntityInterface/StoreEntityPlugin",
      "fullMessage" : "[smurf] Rename Component -> StoreEntityInterface/StoreEntityPlugin\n\nSUMMARY:\nThis is the second of two changes to rename certain concepts that have to do\nwith the unified store. The intent is to choose specific and more descriptive\nterms instead of generic, overloaded ones like \"object type\" and \"component\",\nand thus make it easier/less confusing to communicate about these topics.\n\nHere we rename Component/StateComponent to one of two things depending on\nwhat it actually refers to,\n- StoreEntityInterface for the consumer-facing API\n- StoreEntityPlugin for the store-facing plugin (including interface,\n  reducer and/or adapter, action handlers, listeners, etc.)\n\nWe are not renaming the following:\n- React Components (it's the proper term there)\n- Other references to things that aren't store entity interfaces or plugins,\n  such as cache keys, or objects representing exports for an entire code area\n  e.g. IDynamicTableCaches.tableComponent\n  e.g. const TableComponent = require(\"table\");\n  (Go ahead and rename these separately if you find a more appropriate term)\n\nNote: \"Store entity\" refers to the entire thing - all the logic to deal with\na particular type of object in the store.  But we should almost never refer\nto store entities within the code, only to store entity interfaces or plugins.\n\nTO DO SEPARATELY:\n- Fix consumers to use AppInterface not AppStoreEntityPlugin.interface.\n  Store entity plugins should only be used on unified store load.  I fixed\n  most other places where consumers were using plugin.interface instead of\n  the interface itself, but for App there was too much to deal with here.\n\n- (unified-store internal) Rename type parameter CI -> RT (= return type)\n\nMANUAL TESTING:\n- both unified store samples\n- sanity/smoke check for story create/save/view with viz and table\n- sanity/smoke check for app create/save/run with Redux widgets and script\n\n---------------------------------------\nGORY DETAILS:\n\nUpdate unified-store README and docs.\n\nExport virtual interfaces and interface stubs from data-query-model so they\ncan be used independently of the store entity.\n\nTweak some tests to call exported interface instead of plugin.interface:\n- Test.ts, UnifiedStoreSpec (unified-store)\n- CheckboxGroupActionSpec, DropdownBoxActionSpec, RadioButtonGroupSpec\n  (appBuilding)\n\nRename TS files:\n- Component -> StoreEntityPlugin\n- *Component (in unified-store) -> *StoreEntityInterface\n- ImageWidgetStateComponent -> ImageWidgetStoreEntityPlugin\n- FilterLineStateComponent -> FilterLineStoreEntityPlugin\n- AppComponent -> AppStoreEntityPlugin\n- AppComponentSpec -> AppStoreEntityInterfaceSpec\n- *Component (in viz, table, data-query-model) -> *StoreEntityInterface\n- createComponentInterfacesSpec -> createStoreEntityPluginsSpec\n- ComponentType (in ORC sample) -> StoreEntityType\n\nRename things in code:\n- create*ComponentInterface(s) -> create*StoreEntityPlugins\n- IComponent -> IStoreEntityPlugin\n- StoreComponentInterfaces -> StoreEntityInterfaces\n- *ComponentInterfaces -> *StoreEntityInterfaces\n- getStateComponentInterface (in AbstractUnifiedStoreWidget) -> getStoreEntityInterface\n- TextWidgetStateComponent -> TextWidgetStoreEntityPlugin\n- *Component (in viz, table) -> *StoreEntityInterface\n- *Component (abstract store entities in data-query-model) -> *StoreEntity\n- *Component (plugins in app-building/src/components) -> *StoreEntityPlugin\n- ComponentCacheKeys (VizStoreEntityInterface) -> VizCacheKeys\n- *ComponentInterface (variables) -> *StoreEntityInterface\n- *ComponentActions (in table, text) -> Actions\n- getComponentStateType (in unified-store) -> getStoreEntityStateType\n- FakeComponent.interface -> FakeInterface\n- MixComponent.interface -> MixInterface\n- component (variables in unified-store) -> plugin\n- *Component (functions in unified-store) -> StoreEntityType\n\nChange-Id: I9427491ee43f092171cca40b672b0417324b17c9\nworkstream: app_building\njira: FPA46-443\n",
      "jiraId" : null
    }, {
      "commitId" : "979a3cfa2727e9d03b1f0d0758db9be20efea395",
      "commitAuthor" : {
        "name" : "Johnson Wong",
        "emailAddress" : "johnson.wong@sap.com",
        "when" : 1528256810000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1528256810,
      "shortMessage" : "[smurf] Rename objectType -> storeEntityType",
      "fullMessage" : "[smurf] Rename objectType -> storeEntityType\n\nThis is part 1 of N changes to rename certain concepts that have to do with\nthe unified store.  The intent is to choose specific, meaningful terms\ninstead of generic ones like \"object type\" and \"component\", and thus make it\neasier/less confusing to communicate about these topics.\n\nRename objectType -> storeEntityType when referring to the type ID of an\ninstance in the unified store (vs. some query object, FF metadata object,\ncontentlib artifact, ...)\n\nSimilarly,\n- getUnifiedStoreObjectType -> getStoreEntityType\n- ComponentObjectType -> StoreEntityType\n- StoreObjectType -> StoreEntityType\n\nMANUAL TESTING:\n- unified store samples\n- (informal sanity/smoke) app building DT/RT including button, basic script\n- (informal sanity/smoke) story - viz and table\n\nChange-Id: Ie99411c4346242b34026c1b2b6d69c64508a916a\nworkstream: app_building\njira: FPA46-443\n",
      "jiraId" : null
    }, {
      "commitId" : "ed67c101d48574a649c992f8be59cfcdeeb937a0",
      "commitAuthor" : {
        "name" : "Erik Schmidt",
        "emailAddress" : "erik.schmidt@sap.com",
        "when" : 1528134079000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1528134079,
      "shortMessage" : "[TableAdapter] Selectors shouldn't throw if DataRegion isn't created.",
      "fullMessage" : "[TableAdapter] Selectors shouldn't throw if DataRegion isn't created.\n\nIf the selector is being called before the data region is created the code\nshould not throw.\n\nTables don't need to have a model. It's also possible that a selector is\ncalled before the data region is initialized. So if the selector is called and\nthere's no DataRegion we return NoModelBound.\n\nVariable updates: if the getVariables selector is calleds early, the story\nvariables object might not be created yet. If that's the case, construct\nthe selector using the FF variable objects.\n\nAlso fix apply sort to call refreshGrid so that it clears caches and triggers\nthe onQueryChanged selector.\n\nChange-Id: I680a8e4f0ca086e874ecdccc2aef0f04291466d2\njira: FPA46-431 FPA46-440\n",
      "jiraId" : null
    }, {
      "commitId" : "413d0c8956865d7a9a203e7f442656af57b52077",
      "commitAuthor" : {
        "name" : "Erik Schmidt",
        "emailAddress" : "erik.schmidt@sap.com",
        "when" : 1526333648000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1526333648,
      "shortMessage" : "[StoryAdapter] hook up variable member value help to interface",
      "fullMessage" : "[StoryAdapter] hook up variable member value help to interface\n\nExpose the common variable value helper code to the story interface.\n\njira: FPA46-240\nChange-Id: I14cfd11e6dacbae082844c57f257afa3e84ef642\n",
      "jiraId" : null
    }, {
      "commitId" : "2afac851825bd0455e8933cbb473665615599c8c",
      "commitAuthor" : {
        "name" : "Vincent Choy",
        "emailAddress" : "vincent.choy@sap.com",
        "when" : 1526078415000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1526078415,
      "shortMessage" : "Open story variable prompt dialog for app building",
      "fullMessage" : "Open story variable prompt dialog for app building\n\nAdd action to open variable prompt dialog from story.\nAdd selector to retrieve whether story variable prompt dialog is open.\nHide the story editable checkbox if in app building view.\nSimilar to table variable prompt dialog.\nUpdate the max dependency size. Seems like another change added\nsome more dependencies causing this build to fail.\nInvestigating the cause but Johnson says it is ok to bump this up for now.\nAdd unit test for launching prompt dialog.\nAdd listener instead of a ui event that triggers one time because it is possible\nfor multiple dialogs to be opened in a row and listening to the prompt dialog\nclose event can be triggered for more than one dialog when the expected\nbehavior is to only fire one close event.\n\nChange-Id: I3504149533500934713149283115cc5ad5103c8f\nworkstream: workstream_app_building\njira: FPA46-42\ndeflake: test.sap.fpa.ui.story.storyAdapter.StoryAdapterIntegrationSpec::Open Story Variable Prompt Dialog\n",
      "jiraId" : null
    }, {
      "commitId" : "91a124bc6303580236df17ccb45befa6fdf73659",
      "commitAuthor" : {
        "name" : "Johnson Wong",
        "emailAddress" : "johnson.wong@sap.com",
        "when" : 1525922052000,
        "timeZone" : "GMT+02:00",
        "timeZoneOffset" : 120
      },
      "commitTime" : 1525922052,
      "shortMessage" : "Split out image and text-adapter out from fpa-bi/story folder",
      "fullMessage" : "Split out image and text-adapter out from fpa-bi/story folder\n\nWhat\n-----------------------------------------------------------------------\nMove files according to the suggestied code folder structure at\nhttps://wiki.wdf.sap.corp/wiki/display/OrcaDev/\nClient+Re-Arch+Infrastructure\n\nChanges\n-----------------------------------------------------------------------\n1. Split image and text-adapter out from fpa-bi/story and create their\nown folder based on the above standard. Change \"text-adapter\" as \"text\"\nand create a \"adapter\" under its own src folder.\n2. Previously, image, text-adapter and story are combined together with\none index.ts, this CL split it to their own folder and each one has\ntheir own src/index.ts. For all existing reference of image and text, I\nhave changed them to the new module.\n3. Add image and text to tsconfig.json and webpack.config.js to make it\nrecgonized by TS and Webpack\n4. Create types, utils and selectors and move files in.\n\nChange-Id: Ia97146456a05f621d68d2273a14c0aab40404cd9\nWorkstream: workstream_app_building\nJIRA: FPA46-236\nAction: fix\n",
      "jiraId" : null
    } ]
  } ]
}